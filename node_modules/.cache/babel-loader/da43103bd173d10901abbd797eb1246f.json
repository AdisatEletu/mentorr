{"ast":null,"code":"import _slicedToArray from \"/Users/softcom/Documents/mentorr/mentorr/mentorr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/softcom/Documents/mentorr/mentorr/mentorr/src/components/alert/AlertComponent.js\";\nimport React, { useState, useEffect } from \"react\";\nimport classnames from \"classnames\";\nimport \"./AlertComponent.css\";\nimport uuid from \"uuid/v4\";\nimport MdCheckmarkCircleOutline from \"react-ionicons/lib/MdCheckmarkCircleOutline\";\nimport MdClose from \"react-ionicons/lib/MdClose\";\nimport IosCloseCircleOutline from \"react-ionicons/lib/IosCloseCircleOutline\";\nimport IosWarningOutline from \"react-ionicons/lib/IosWarningOutline\";\nimport IosInformationCircleOutline from \"react-ionicons/lib/IosInformationCircleOutline\";\n/**\n *\n * when I trigger an alert\n * 1. look for container in the DOM and add display block\n * 2. inject content into it and rehydrate it\n * 3.\n *\n */\n\nconst currentId = uuid();\n\nconst AlertItem = ({\n  alert,\n  removeAlert\n}) => {\n  const _useState = useState(\"slideInUp\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        currentClass = _useState2[0],\n        setCurrentClass = _useState2[1];\n\n  useEffect(() => {\n    setTimeout(async () => {\n      await setCurrentClass(\"fadeOutDown\");\n      doRemove(currentId);\n    }, 3000);\n  });\n\n  const doRemove = id => {\n    setCurrentClass(\"fadeOutDown\");\n    setTimeout(() => removeAlert(id), 500);\n  };\n\n  const alertType = type => {\n    switch (type) {\n      case \"success\":\n        return React.createElement(MdCheckmarkCircleOutline, {\n          fontSize: \"30px\",\n          color: \"#27ae60\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        });\n\n      case \"error\":\n        return React.createElement(IosCloseCircleOutline, {\n          fontSize: \"30px\",\n          color: \"#e74c3c\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        });\n\n      case \"warning\":\n        return React.createElement(IosWarningOutline, {\n          fontSize: \"26px\",\n          color: \"orange\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        });\n\n      case \"info\":\n        return React.createElement(IosInformationCircleOutline, {\n          fontSize: \"30px\",\n          color: \"#69f\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        });\n\n      default:\n        return React.createElement(IosInformationCircleOutline, {\n          fontSize: \"30px\",\n          color: \"#69f\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        });\n    }\n  };\n\n  return React.createElement(\"li\", {\n    className: classnames(\"alert-item animated faster\", {\n      slideInUp: currentClass === \"slideInUp\",\n      fadeOutDown: currentClass === \"fadeOutDown\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, alertType(alert.type)), React.createElement(\"div\", {\n    className: \"alert-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    style: {\n      color: \"#ccc\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, alert.message)), React.createElement(\"div\", {\n    className: \"close\",\n    onClick: () => doRemove(alert.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(MdClose, {\n    fontSize: \"16px\",\n    color: \"grey\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })));\n};\n\nexport class AlertWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.doAlert = (message, type) => {\n      // let newAlerts = [{ message, type, id: uuid() }];\n      this.setState({\n        alerts: [{\n          message,\n          type,\n          id: currentId\n        }]\n      });\n    };\n\n    this.removeAlert = id => {\n      let newAlerts = this.state.alerts.filter(alert => alert.id !== id);\n      this.setState({\n        alerts: newAlerts\n      });\n    };\n\n    this.state = {\n      alerts: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"ul\", {\n      className: \"alert-container\",\n      style: {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.state.alerts.map((alert, i) => {\n      return React.createElement(AlertItem, {\n        alert: alert,\n        key: uuid(),\n        index: i,\n        removeAlert: this.removeAlert,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      });\n    }));\n  }\n\n}\nexport const doAlert = (message = \"\", type = \"info\") => {\n  if (window.alertRef) {\n    window.alertRef.doAlert(message, type);\n  } else {\n    console.log(\"no container found\");\n  }\n};","map":{"version":3,"sources":["/Users/softcom/Documents/mentorr/mentorr/mentorr/src/components/alert/AlertComponent.js"],"names":["React","useState","useEffect","classnames","uuid","MdCheckmarkCircleOutline","MdClose","IosCloseCircleOutline","IosWarningOutline","IosInformationCircleOutline","currentId","AlertItem","alert","removeAlert","currentClass","setCurrentClass","setTimeout","doRemove","id","alertType","type","slideInUp","fadeOutDown","color","message","AlertWrapper","Component","constructor","props","doAlert","setState","alerts","newAlerts","state","filter","render","map","i","window","alertRef","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport classnames from \"classnames\";\nimport \"./AlertComponent.css\";\nimport uuid from \"uuid/v4\";\nimport MdCheckmarkCircleOutline from \"react-ionicons/lib/MdCheckmarkCircleOutline\";\nimport MdClose from \"react-ionicons/lib/MdClose\";\nimport IosCloseCircleOutline from \"react-ionicons/lib/IosCloseCircleOutline\";\nimport IosWarningOutline from \"react-ionicons/lib/IosWarningOutline\";\nimport IosInformationCircleOutline from \"react-ionicons/lib/IosInformationCircleOutline\";\n\n/**\n *\n * when I trigger an alert\n * 1. look for container in the DOM and add display block\n * 2. inject content into it and rehydrate it\n * 3.\n *\n */\n\nconst currentId = uuid();\n\nconst AlertItem = ({ alert, removeAlert }) => {\n  const [currentClass, setCurrentClass] = useState(\"slideInUp\");\n\n  useEffect(() => {\n    setTimeout(async () => {\n      await setCurrentClass(\"fadeOutDown\");\n      doRemove(currentId);\n    }, 3000);\n  });\n\n  const doRemove = id => {\n    setCurrentClass(\"fadeOutDown\");\n    setTimeout(() => removeAlert(id), 500);\n  };\n\n  const alertType = type => {\n    switch (type) {\n      case \"success\":\n        return <MdCheckmarkCircleOutline fontSize=\"30px\" color=\"#27ae60\" />;\n      case \"error\":\n        return <IosCloseCircleOutline fontSize=\"30px\" color=\"#e74c3c\" />;\n      case \"warning\":\n        return <IosWarningOutline fontSize=\"26px\" color=\"orange\" />;\n      case \"info\":\n        return <IosInformationCircleOutline fontSize=\"30px\" color=\"#69f\" />;\n      default:\n        return <IosInformationCircleOutline fontSize=\"30px\" color=\"#69f\" />;\n    }\n  };\n\n  return (\n    <li\n      className={classnames(\"alert-item animated faster\", {\n        slideInUp: currentClass === \"slideInUp\",\n        fadeOutDown: currentClass === \"fadeOutDown\"\n      })}>\n      <div className=\"icon\">{alertType(alert.type)}</div>\n      <div className=\"alert-content\">\n        <span style={{ color: \"#ccc\" }}>{alert.message}</span>\n      </div>\n      <div className=\"close\" onClick={() => doRemove(alert.id)}>\n        <MdClose fontSize=\"16px\" color=\"grey\" />\n      </div>\n    </li>\n  );\n};\n\nexport class AlertWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      alerts: []\n    };\n  }\n\n  doAlert = (message, type) => {\n    // let newAlerts = [{ message, type, id: uuid() }];\n    this.setState({ alerts: [{ message, type, id: currentId }] });\n  };\n\n  removeAlert = id => {\n    let newAlerts = this.state.alerts.filter(alert => alert.id !== id);\n    this.setState({ alerts: newAlerts });\n  };\n\n  render() {\n    return (\n      <ul className=\"alert-container\" style={{}}>\n        {this.state.alerts.map((alert, i) => {\n          return (\n            <AlertItem\n              alert={alert}\n              key={uuid()}\n              index={i}\n              removeAlert={this.removeAlert}\n            />\n          );\n        })}\n      </ul>\n    );\n  }\n}\n\nexport const doAlert = (message = \"\", type = \"info\") => {\n  if (window.alertRef) {\n    window.alertRef.doAlert(message, type);\n  } else {\n    console.log(\"no container found\");\n  }\n};\n"]},"metadata":{},"sourceType":"module"}